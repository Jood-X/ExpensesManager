// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ExpenseManager.DataAccessLayer.Data;
#nullable disable

namespace WebApplication2.Migrations
{
    [DbContext(typeof(WalletManagerDbContext))]
    [Migration("20250623134914_AddRefreshTokens")]
    partial class AddRefreshTokens
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebApplication2.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Color")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<decimal>("Limit")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("CreateBy");

                    b.HasIndex("UpdateBy");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("WebApplication2.Models.RecurringExpense", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<string>("RepeatInterval")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.Property<int>("WalletId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CreateBy");

                    b.HasIndex("UpdateBy");

                    b.HasIndex("WalletId");

                    b.ToTable("RecurringExpenses");
                });

            modelBuilder.Entity("WebApplication2.Models.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.Property<int>("WalletId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CreateBy");

                    b.HasIndex("UpdateBy");

                    b.HasIndex("WalletId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("WebApplication2.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RefreshTokenExpiryTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("UpdateBy");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("WebApplication2.Models.Wallet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("CreateBy");

                    b.HasIndex("UpdateBy");

                    b.ToTable("Wallet", (string)null);
                });

            modelBuilder.Entity("WebApplication2.Models.Category", b =>
                {
                    b.HasOne("WebApplication2.Models.User", "CreateByNavigation")
                        .WithMany("Categories")
                        .HasForeignKey("CreateBy")
                        .HasConstraintName("FK_Categories_Users");

                    b.HasOne("WebApplication2.Models.User", "UpdateByNavigation")
                        .WithMany()
                        .HasForeignKey("UpdateBy");

                    b.Navigation("CreateByNavigation");

                    b.Navigation("UpdateByNavigation");
                });

            modelBuilder.Entity("WebApplication2.Models.RecurringExpense", b =>
                {
                    b.HasOne("WebApplication2.Models.Category", "Category")
                        .WithMany("RecurringExpenses")
                        .HasForeignKey("CategoryId")
                        .IsRequired()
                        .HasConstraintName("FK_RecurringExpenses_Categories");

                    b.HasOne("WebApplication2.Models.User", "CreateByNavigation")
                        .WithMany("RecurringExpenses")
                        .HasForeignKey("CreateBy")
                        .IsRequired()
                        .HasConstraintName("FK_RecurringExpenses_Users");

                    b.HasOne("WebApplication2.Models.User", "UpdateByNavigation")
                        .WithMany()
                        .HasForeignKey("UpdateBy");

                    b.HasOne("WebApplication2.Models.Wallet", "Wallet")
                        .WithMany("RecurringExpenses")
                        .HasForeignKey("WalletId")
                        .IsRequired()
                        .HasConstraintName("FK_RecurringExpenses_Wallet");

                    b.Navigation("Category");

                    b.Navigation("CreateByNavigation");

                    b.Navigation("UpdateByNavigation");

                    b.Navigation("Wallet");
                });

            modelBuilder.Entity("WebApplication2.Models.Transaction", b =>
                {
                    b.HasOne("WebApplication2.Models.Category", "Category")
                        .WithMany("Transactions")
                        .HasForeignKey("CategoryId")
                        .IsRequired()
                        .HasConstraintName("FK_Transactions_Categories");

                    b.HasOne("WebApplication2.Models.User", "CreateByNavigation")
                        .WithMany("Transactions")
                        .HasForeignKey("CreateBy")
                        .IsRequired()
                        .HasConstraintName("FK_Transactions_Users");

                    b.HasOne("WebApplication2.Models.User", "UpdateByNavigation")
                        .WithMany()
                        .HasForeignKey("UpdateBy");

                    b.HasOne("WebApplication2.Models.Wallet", "Wallet")
                        .WithMany("Transactions")
                        .HasForeignKey("WalletId")
                        .IsRequired()
                        .HasConstraintName("FK_Transactions_Wallet");

                    b.Navigation("Category");

                    b.Navigation("CreateByNavigation");

                    b.Navigation("UpdateByNavigation");

                    b.Navigation("Wallet");
                });

            modelBuilder.Entity("WebApplication2.Models.User", b =>
                {
                    b.HasOne("WebApplication2.Models.User", "UpdateByNavigation")
                        .WithMany()
                        .HasForeignKey("UpdateBy");

                    b.Navigation("UpdateByNavigation");
                });

            modelBuilder.Entity("WebApplication2.Models.Wallet", b =>
                {
                    b.HasOne("WebApplication2.Models.User", "CreateByNavigation")
                        .WithMany("Wallets")
                        .HasForeignKey("CreateBy")
                        .IsRequired()
                        .HasConstraintName("FK_Wallet_Users");

                    b.HasOne("WebApplication2.Models.User", "UpdateByNavigation")
                        .WithMany()
                        .HasForeignKey("UpdateBy");

                    b.Navigation("CreateByNavigation");

                    b.Navigation("UpdateByNavigation");
                });

            modelBuilder.Entity("WebApplication2.Models.Category", b =>
                {
                    b.Navigation("RecurringExpenses");

                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("WebApplication2.Models.User", b =>
                {
                    b.Navigation("Categories");

                    b.Navigation("RecurringExpenses");

                    b.Navigation("Transactions");

                    b.Navigation("Wallets");
                });

            modelBuilder.Entity("WebApplication2.Models.Wallet", b =>
                {
                    b.Navigation("RecurringExpenses");

                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
